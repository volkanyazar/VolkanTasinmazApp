// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace VolkanAppTasinmaz.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230921082625_initdb2")]
    partial class initdb2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Il", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("il_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IlName")
                        .IsRequired()
                        .HasColumnName("il_adi")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("IlId");

                    b.ToTable("tbliller");
                });

            modelBuilder.Entity("Entities.Concrete.Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ilce_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IlId")
                        .HasColumnName("il_id")
                        .HasColumnType("integer");

                    b.Property<string>("IlceName")
                        .IsRequired()
                        .HasColumnName("ilce_adi")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("IlceId");

                    b.HasIndex("IlId");

                    b.ToTable("tblilceler");
                });

            modelBuilder.Entity("Entities.Concrete.Log", b =>
                {
                    b.Property<int>("logid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("text");

                    b.Property<bool>("durum")
                        .HasColumnType("boolean");

                    b.Property<string>("islemtipi")
                        .HasColumnType("text");

                    b.Property<string>("logip")
                        .HasColumnType("text");

                    b.Property<DateTime>("tarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("userid")
                        .HasColumnType("integer");

                    b.HasKey("logid");

                    b.ToTable("tbllogs");
                });

            modelBuilder.Entity("Entities.Concrete.Mahalle", b =>
                {
                    b.Property<int>("MahalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mahalle_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IlceId")
                        .HasColumnName("ilce_id")
                        .HasColumnType("integer");

                    b.Property<string>("MahalleName")
                        .IsRequired()
                        .HasColumnName("mahalle_adi")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("MahalleId");

                    b.HasIndex("IlceId");

                    b.ToTable("tblmahalleler");
                });

            modelBuilder.Entity("VolkanAppTasinmaz.API.Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userid")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adres")
                        .HasColumnName("adres")
                        .HasColumnType("character varying(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("character varying(80)")
                        .HasMaxLength(80);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NewPassword")
                        .HasColumnName("newpassword")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("passwordhash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("passwordsalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("role")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("Status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.HasKey("UserId");

                    b.ToTable("tblusers");
                });

            modelBuilder.Entity("VolkanAppTasinmaz.API.Entities.Concrete.Tasinmaz", b =>
                {
                    b.Property<int>("TasinmazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tasinmazid")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ada")
                        .IsRequired()
                        .HasColumnName("ada")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnName("adres")
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<int>("Il")
                        .HasColumnName("il")
                        .HasColumnType("integer");

                    b.Property<int>("Ilce")
                        .HasColumnName("ilce")
                        .HasColumnType("integer");

                    b.Property<int>("MahalleId")
                        .HasColumnName("mahalleid")
                        .HasColumnType("integer");

                    b.Property<string>("Nitelik")
                        .IsRequired()
                        .HasColumnName("nitelik")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Parsel")
                        .IsRequired()
                        .HasColumnName("parsel")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("integer");

                    b.Property<string>("coorX")
                        .IsRequired()
                        .HasColumnName("x")
                        .HasColumnType("character varying(155)")
                        .HasMaxLength(155);

                    b.Property<string>("coorY")
                        .IsRequired()
                        .HasColumnName("y")
                        .HasColumnType("character varying(155)")
                        .HasMaxLength(155);

                    b.HasKey("TasinmazId");

                    b.HasIndex("MahalleId");

                    b.HasIndex("UserId");

                    b.ToTable("tbltasinmaz");
                });

            modelBuilder.Entity("Entities.Concrete.Ilce", b =>
                {
                    b.HasOne("Entities.Concrete.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.Mahalle", b =>
                {
                    b.HasOne("Entities.Concrete.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VolkanAppTasinmaz.API.Entities.Concrete.Tasinmaz", b =>
                {
                    b.HasOne("Entities.Concrete.Mahalle", "Mahalle")
                        .WithMany()
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolkanAppTasinmaz.API.Core.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
